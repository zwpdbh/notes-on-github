* pthread
** Thread Creation
#+BEGIN_SRC c
  #include <pthread.h>
  int pthread_create(pthread_t *restrict tidp,
                     const pthread_attr_t *restrict attr,
                     void *(*start_rtn)(void *), void *restrict arg);
#+END_SRC
- =tidp=, newly created thread
- =attr=, is used to customize various thread attributes.
- =start_rtn=, the newly created thread starts running at the address of =start_rtn= function.
  - This function takes a single argument, =arg=, which is a typeless point.
  - If you need to pass more than one argument to the =start_rtn= function, then you need to store them in a structure and pass the address of the structure in arg.
** Thread Termination
- A single thread can exit in three ways, so stopping its flow of control, without terminating the entire process.
  1) simply return from the start routine
  2) can be canceled by another thread in the same process
  3) call =void pthread_exit(void *rval_ptr);=
     - =rval_ptr= is a typeless pointer. It is available to another threads in the process by calling the =int pthread_join(pthread_t thread, void **rval_ptr);= function.
- The calling thread will block until the sepcific thread is terminated using those 3 ways.
